<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop.xsd">
	
    <!-- 数据库数据源(druid) -->
    <bean id="scf:dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
        <property name="driverClassName" value="${jdbc.driverClassName}" />
        <property name="url" value="${jdbc.url}" />
        <property name="username" value="${jdbc.username}" />
        <property name="password" value="${jdbc.password}" />

        <property name="initialSize" value="${db.initialSize}" />
        <property name="minIdle" value="${db.minIdle}" />
        <property name="maxActive" value="${db.maxActive}" />

        <property name="maxWait" value="${db.maxWait}" />

        <property name="timeBetweenEvictionRunsMillis" value="${db.timeBetweenEvictionRunsMillis}" />
        <property name="minEvictableIdleTimeMillis" value="${db.minEvictableIdleTimeMillis}" />

        <property name="validationQuery" value="${db.validationQuery}" />
        <property name="testWhileIdle" value="true" />
        <property name="testOnBorrow" value="true" />
        <property name="testOnReturn" value="true" />

        <!-- filters -->
        
        <property name="filters" value="stat,log4j" />
        
        <property name="proxyFilters">  
        <list>  
            <ref bean="log-filter" />  
        </list>  
    </property>  
        
    </bean>
    
    
    <bean id="log-filter" class="com.alibaba.druid.filter.logging.Log4jFilter">  
    		<property name="statementExecutableSqlLogEnable" value="true" />
            <property name="statementCreateAfterLogEnabled" value="false" />
            <property name="statementPrepareAfterLogEnabled" value="false" />
            <property name="statementPrepareCallAfterLogEnabled" value="false" />
            <property name="statementExecuteAfterLogEnabled" value="false" />
            <property name="statementExecuteQueryAfterLogEnabled" value="false" />
            <property name="statementExecuteUpdateAfterLogEnabled" value="false" />
            <property name="statementExecuteBatchAfterLogEnabled" value="false" />
            <property name="statementCloseAfterLogEnabled" value="false" />
            <property name="statementParameterClearLogEnable" value="false" />
            <property name="statementParameterSetLogEnabled" value="false" />
</bean>  


	<!-- Mybatis Spring SqlSessionFactoryBean -->
	<bean id="scf:sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="scf:dataSource" />
		<property name="configLocation" value="classpath:scf/mybatis-cfg.xml" />
		<!-- 自动扫描mapping.xml文件，**表示迭代查找, -->
		<property name="mapperLocations" value="classpath*:project/**/*.mapper.xml" />
	</bean>

</beans>